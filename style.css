*{
    padding:0px;
    margin:0px;
}

canvas{
    /* background:green; */
    /* background-color: transparent; */
    background-color: rgba(166, 218, 220, 0.9);
    /* background: hsla(50, 33%, 25%, 0.75) */
    /* border:1px solid red; */
    display: block;
    /* width: 500px; */
    /* height:500px; */
    position: fixed; 
    /* 增加position:fixed是为了让在手机触屏上面保持画布区域不到处乱动，加不加top和left都不影响，方方上课的时候加了top和left */
    /* top:100px; */
    /* left:100px; */
}


.icon {
    width: 1em; height: 1em;
    vertical-align: -0.15em;
    fill: currentColor;
    overflow: hidden;
    margin: 0px 10px;
    transition: all 0.5s;
    /* 过度变大,一般放到原来的上面可以保持变大或者恢复都可以过度 */
 }

.active.icon{
    /* font-size: 1.4em; */
    transform: scale(1.2);
    /* 也可以用font-size,这里用transform scale(1.2)是放大1.2倍 */
    color:red;
}


.actions{
    position: fixed;
    left:0px;
    top:0px;
    cursor: pointer;
    font-size: 2em;
    margin:5px 20px;
}

.clearwrap{
    position: fixed;
    left:0px;
    bottom:0px;
    cursor: pointer;
    font-size: 2em;
    margin:5px 20px;
    /* background-image:linear-gradient(135deg, transparent 25%, black 25%, black 50%, transparent 50%, transparent 75%, black 75%, black);
    background-size:20px 20px; */

}

.clearwrap.clearactive{
    animation:transform-2 1s alternate;
    /* 1s是指持续时间为1s */
    /* alternate 是animation-direction属性的一个值，代表动画交替反向运行，反向运行时，动画按步后退，同时，带时间功能的函数也反向，比如，ease-in 在反向时成为ease-out。计数取决于开始时是奇数迭代还是偶数迭代*/
}


ol{
    position: fixed;
    left:29px;
    top:55px;
    list-style: none;
}

ol li{
    margin:10px 0px;
}

.green{
    border:1px solid green;
    background: green;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s;
}

.yellow{
    border:1px solid yellow;
    background: yellow;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s;
}

.blue{
    border:1px solid blue;
    background: blue;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s;
}

.black{
    border:1px solid black;
    background: black;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s;
}

ol .black.coloractive{
    box-shadow: 0px 0px 2px 1px black;
    transform: scale(1.1);
}

ol .blue.coloractive{
    box-shadow: 0px 0px 2px 1px blue;
    transform: scale(1.1);
}

ol .yellow.coloractive{
    box-shadow: 0px 0px 2px 1px yellow;
    transform: scale(1.1);
}

ol .green.coloractive{
    box-shadow: 0px 0px 2px 1px green;
    transform: scale(1.1);
}

.thin1{
    width: 50px;
    height:1px;
    /* border: 1px solid red; */
    position: fixed;
    background: black;
    top:10px;
    right:20px;
    cursor: pointer;
    transition: all 0.4s;
}

.thin{
    width: 50px;
    height:5px;
    /* border: 1px solid red; */
    position: fixed;
    background: black;
    top:30px;
    right:20px;
    cursor: pointer;
    transition: all 0.4s;
}

.thick{
    width: 50px;
    height:10px;
    /* border: 1px solid red; */
    position: fixed;
    background: black;
    top:50px;
    right:20px;
    cursor: pointer;
    transition: all 0.4s;
}

ol .thin1.sizeactive{
    box-shadow: 0px 0px 2px 1px grey;
    transform: scale(1.1);
}

ol .thin.sizeactive{
    box-shadow: 0px 0px 2px 1px grey;
    transform: scale(1.1);
}

ol .thick.sizeactive{
    box-shadow: 0px 0px 2px 1px grey;
    transform: scale(1.1);
}

/* @keyframes transform-2{
    from{transform:scale(1);color:red;}
    to{transform:scale(1.5);color:red;}
} */

@keyframes transform-2{
    0%{transform:scale(1);color:red;}
    50%{transform:scale(1.5);}
    100%{transform:scale(1);color:red;}
}

/* 动画的关键帧，关键帧名字是transform-2，可以用from to，from to只能有两种状态起点和终点，相当于0%和100%,如果用百分比就可以有很多种状态 */
/* 第二个我用到了0%，50%，100%三种状态     */